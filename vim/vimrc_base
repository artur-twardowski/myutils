set nocompatible
syntax on
set nowrap
set encoding=utf8
set hidden
set number
set ruler
set tabstop=4
set shiftwidth=4
set notimeout
set nottimeout
set smarttab
set expandtab
set listchars=tab:>·,space:·,extends:>,precedes:<
set list
set showcmd
set laststatus=2
set report=0
set cursorline

function! ToggleConceal()
    if &conceallevel == 1
        set conceallevel=0
        echom "Ligatures disabled"
    else
        set conceallevel=1
        echom "Ligatures enabled"
    endif
endfunction

function! ToggleConcealCursor()
    if &concealcursor == ""
        set concealcursor="nc"
    else
        set concealcursor=""
    endif
endfunction

function ChangeLineSpacing(amount)
    let spacing = &lsp + a:amount
    let &lsp=spacing
    echom "Line spacing set to " &lsp
endfunction

if has("gui_running")
    if has("gui_gtk2") || has("gui_gtk3")
        set guifont=DejaVu\ Sans\ Mono\ 12
        set lsp=4
    elseif has("gui_win32")
        set guifont=Consolas:h12
        set lsp=0
    endif
    set guioptions-=m
    set guioptions-=T
    set guioptions-=r

    nnoremap <F7> :call ChangeLineSpacing(-2)<CR>
    nnoremap <F8> :call ChangeLineSpacing(2)<CR>
    nnoremap <M-F7>        :set guifont=*<CR>
endif

set completeopt=menuone,popup
packadd termdebug

nnoremap <C-h>      :bp<CR>
nnoremap <C-l>      :bn<CR>
nnoremap <C-x>      :bd<CR>
nnoremap <C-j>      :ls<CR>:b
nnoremap <F9>       :call ToggleConceal()<CR>
nnoremap <S-F9>     :call ToggleConcealCursor()<CR>
nnoremap <F10>      :set number!<CR>
nnoremap <S-F10>    :set cursorline!<CR>
nnoremap <F11>      :set wrap!<CR>
" gc...: various custom ops
" gca: apply configuration
" gce: edit configuration file
" gcf: select GUI font
" gco: select colorscheme
"
" gcd...: calculations and other data ops
" gcda, gcdA: calculate average of numbers, replace (gcda) or print (gcdA)
" gcds, gcdS: calculate sum of numbers
"
" gcx...: hex editor
" gcxx: raw data to hex (xxd -g1)
" gcxb: raw data to binary (xxd -b -g4)
" gcxr: hex/binary to raw data (xxd -r)
" gcxi: raw data to hex, customize command
"
nnoremap gca        :so ~/.vimrc<CR>
nnoremap gce        :e ~/.vimrc<CR>
nnoremap gco        :colorscheme <C-d>
noremap  gcds       :!awk '{ s += $1 } END { print s }'<CR>
noremap  gcdS       :!awk '{ s += $1 } END { print s }'<CR>y$u:echo "Sum = <C-r>""<CR>
noremap  gcda       :!awk '{ s += $1; c += 1 } END { print s/c }'<CR>
noremap  gcdA       :!awk '{ s += $1; c += 1 } END { print s/c }'<CR>y$u:echo "Average = <C-r>""<CR>
nnoremap gcxx       :%!xxd -g1<CR>
nnoremap gcxb       :%!xxd -b -g1 -c4<CR>
nnoremap gcxr       :%!xxd -r<CR>
nnoremap gcxi       :%!xxd 

vnoremap <TAB>      >gv
vnoremap <S-TAB>    <gv

inoremap <S-Up>     <ESC>v<Up>
inoremap <S-Down>   <ESC>v<Down>
inoremap <S-Left>   <ESC>v<Left>
inoremap <S-Right>  <ESC>v<Right>
nnoremap <S-Up>     v<Up>
nnoremap <S-Down>   v<Down>
nnoremap <S-Left>   v<Left>
nnoremap <S-Right>  v<Right>
vnoremap <S-Up>     <Up>
vnoremap <S-Down>   <Down>
vnoremap <S-Left>   <Left>
vnoremap <S-Right>  <Right>

